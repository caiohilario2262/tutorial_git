/*SCRIPT FEITO PARA SEGREGAR EMAILS, NELE É POSSIVEL ADICIONAR E REMOVER EMAILS SEM QUE SEJA NECESSÁRIO ALTERAR O SCRIPT PRINCIPAL*/


*SCRIPT FEITO PARA CARREGAR UM GRUPO DE DESTINATARIOS DENTRO DE UMA VARIAVEL;

DATA WORK.BASE_EMAILS;
	INPUT GRUPO $ TIPO $ EMAIL$;
	DATALINES;
	GRUPO_1	PARA pessoa1@gmail.com
	GRUPO_1 CC pessoa1@gmail.com
	GRUPO_2 PARA pessoa2@gmail.com
	GRUPO_2 CC pessoa2@gmail.com
	GRUPO_3 PARA pessoa3@gmail.com
	GRUPO_3 CC pessoa3@gmail.com
	GRUPO_4 PARA pessoa4@gmail.com
	GRUPO_4	CC pessoa4@gmail.com



Após realizar a ingestão da tabela
%MACRO MACRO_EMAIL(GRUPO);

	%GLOBAL CC PARA;

	%*BUSCANDO A INFRA MAIS RECENTE A SER UTILIZADA PELA VTABLE;
	PROC SQL NOPRINT;
		SELECT COMPRESS (SUBSTR(MEMNAME, [Nº PARA MOSTRAR SOMENTE A DATA])) AS DATA INTO: DATA_INFRA
		FROM SASHELP.VTABLE
		WHERE LIBNAME = 'LIBREF' AND MEMNAME LIKE 'NOMEREF';
		ORDER BY DATA DESC;
	QUIT;

	%*ORDENANDO;
		PROC SORT DATA = WORK.BASE_EMAILS OUT = WORK.BASE_SORTED;
		BY GRUPO TIPO;
	RUN;

	%*TRANSPOSIÇÃO;
	PROC TRANSPOSE DATA = WORK.BASE_SORTED;
		OUT= WORK.BASE_T
		PREFIX = EMAIL;
		BY GRUPO TIPO;
		VAR EMAIL;
	RUN;

	%*CONCATENANDO OS EMAILS EM UMA UNICA COLUNA;
	DATA WORK.DEFINE_EMAIL;
		SET WORK.BASE_T;
		CONCAT_EMAILS = CATS('"', CATX('""', OF EMAIL:),'"');
		DROP EMAIL: _NAME:;
	RUN;

	%*DEFININDO OS OS VALORES DAS VARIAVEIS PARA E CC;
	DATA _NULL_;
		SET DEFINE_EMAIL;
		IF TIPO = 'PARA' AND GRUPO = '&GRUPO' THEN
		CALL SYMPUT ("PARA", CONCAT_EMAILS);
		IF TIPO = 'CC' AND GRUPO = '&GRUPO' THEN
		CALL SYMPUT ("CC", CONCAT_EMAILS);
	RUN;

%MEND MACRO_EMAIL;






